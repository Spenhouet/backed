import{S as u,i as d,s as _,C as m,k as h,l as g,m as v,h as r,n as f,b as p,D as w,E as b,F as M,g as y,d as z}from"./index.3647f7f4.js";import{t as c}from"./tw-merge.b02e8c47.js";function C(n){let l,o,a;const i=n[2].default,e=m(i,n,n[1],null);return{c(){l=h("div"),e&&e.c(),this.h()},l(s){l=g(s,"DIV",{class:!0});var t=v(l);e&&e.l(t),t.forEach(r),this.h()},h(){f(l,"class",o=c(`flex flex-col bg-gray-50 shadow sm:rounded-lg overflow-hidden ${n[0]}`))},m(s,t){p(s,l,t),e&&e.m(l,null),a=!0},p(s,[t]){e&&e.p&&(!a||t&2)&&w(e,i,s,s[1],a?M(i,s[1],t,null):b(s[1]),null),(!a||t&1&&o!==(o=c(`flex flex-col bg-gray-50 shadow sm:rounded-lg overflow-hidden ${s[0]}`)))&&f(l,"class",o)},i(s){a||(y(e,s),a=!0)},o(s){z(e,s),a=!1},d(s){s&&r(l),e&&e.d(s)}}}function D(n,l,o){let{$$slots:a={},$$scope:i}=l,{class:e=""}=l;return n.$$set=s=>{"class"in s&&o(0,e=s.class),"$$scope"in s&&o(1,i=s.$$scope)},[e,i,a]}class $ extends u{constructor(l){super(),d(this,l,D,C,_,{class:0})}}export{$ as M};
