import{n as K}from"./index.d06fb743.js";function $(i,a){let t;if(a===void 0)for(const o of i)o!=null&&(t<o||t===void 0&&o>=o)&&(t=o);else{let o=-1;for(let d of i)(d=a(d,++o,i))!=null&&(t<d||t===void 0&&d>=d)&&(t=d)}return t}function I(i,a){let t;if(a===void 0)for(const o of i)o!=null&&(t>o||t===void 0&&o>=o)&&(t=o);else{let o=-1;for(let d of i)(d=a(d,++o,i))!=null&&(t>d||t===void 0&&d>=d)&&(t=d)}return t}var ee=W,Q=K;function W(i){if(i=i||{},"uniqueLinkId"in i&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),i.multigraph=i.uniqueLinkId),i.multigraph===void 0&&(i.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var a=new Map,t=new Map,o={},d=0,b=i.multigraph?z:T,p=[],w=m,L=m,h=m,g=m,v={version:20,addNode:x,addLink:P,removeLink:G,removeNode:y,getNode:c,getNodeCount:C,getLinkCount:E,getEdgeCount:E,getLinksCount:E,getNodesCount:C,getLinks:_,forEachNode:q,forEachLinkedNode:j,forEachLink:Y,beginUpdate:h,endUpdate:g,clear:V,hasLink:k,hasNode:c,getLink:k};return Q(v),F(),v;function F(){var e=v.on;v.on=n;function n(){return v.beginUpdate=h=D,v.endUpdate=g=H,w=O,L=R,v.on=e,e.apply(v,arguments)}}function O(e,n){p.push({link:e,changeType:n})}function R(e,n){p.push({node:e,changeType:n})}function x(e,n){if(e===void 0)throw new Error("Invalid node identifier");h();var r=c(e);return r?(r.data=n,L(r,"update")):(r=new X(e,n),L(r,"add")),a.set(e,r),g(),r}function c(e){return a.get(e)}function y(e){var n=c(e);if(!n)return!1;h();var r=n.links;return r&&(r.forEach(M),n.links=null),a.delete(e),L(n,"remove"),g(),!0}function P(e,n,r){h();var u=c(e)||x(e),s=c(n)||x(n),f=b(e,n,r),l=t.has(f.id);return t.set(f.id,f),U(u,f),e!==n&&U(s,f),w(f,l?"update":"add"),g(),f}function T(e,n,r){var u=N(e,n),s=t.get(u);return s?(s.data=r,s):new S(e,n,r,u)}function z(e,n,r){var u=N(e,n),s=o.hasOwnProperty(u);if(s||k(e,n)){s||(o[u]=0);var f="@"+ ++o[u];u=N(e+f,n+f)}return new S(e,n,r,u)}function C(){return a.size}function E(){return t.size}function _(e){var n=c(e);return n?n.links:null}function G(e,n){return n!==void 0&&(e=k(e,n)),M(e)}function M(e){if(!e||!t.get(e.id))return!1;h(),t.delete(e.id);var n=c(e.fromId),r=c(e.toId);return n&&n.links.delete(e),r&&r.links.delete(e),w(e,"remove"),g(),!0}function k(e,n){if(!(e===void 0||n===void 0))return t.get(N(e,n))}function V(){h(),q(function(e){y(e.id)}),g()}function Y(e){if(typeof e=="function")for(var n=t.values(),r=n.next();!r.done;){if(e(r.value))return!0;r=n.next()}}function j(e,n,r){var u=c(e);if(u&&u.links&&typeof n=="function")return r?B(u.links,e,n):A(u.links,e,n)}function A(e,n,r){for(var u,s=e.values(),f=s.next();!f.done;){var l=f.value,J=l.fromId===n?l.toId:l.fromId;if(u=r(a.get(J),l),u)return!0;f=s.next()}}function B(e,n,r){for(var u,s=e.values(),f=s.next();!f.done;){var l=f.value;if(l.fromId===n&&(u=r(a.get(l.toId),l),u))return!0;f=s.next()}}function m(){}function D(){d+=1}function H(){d-=1,d===0&&p.length>0&&(v.fire("changed",p),p.length=0)}function q(e){if(typeof e!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+e);for(var n=a.values(),r=n.next();!r.done;){if(e(r.value))return!0;r=n.next()}}}function X(i,a){this.id=i,this.links=null,this.data=a}function U(i,a){i.links?i.links.add(a):i.links=new Set([a])}function S(i,a,t,o){this.fromId=i,this.toId=a,this.data=t,this.id=o}function N(i,a){return i.toString()+"ðŸ‘‰ "+a.toString()}export{$ as a,I as m,ee as n};
