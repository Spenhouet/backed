import{g as K,n as Q}from"./index.2b247e88.js";function ee(t,a){let i;if(a===void 0)for(const o of t)o!=null&&(i<o||i===void 0&&o>=o)&&(i=o);else{let o=-1;for(let d of t)(d=a(d,++o,t))!=null&&(i<d||i===void 0&&d>=d)&&(i=d)}return i}function ne(t,a){let i;if(a===void 0)for(const o of t)o!=null&&(i>o||i===void 0&&o>=o)&&(i=o);else{let o=-1;for(let d of t)(d=a(d,++o,t))!=null&&(i>d||i===void 0&&d>=d)&&(i=d)}return i}var W=Z,X=Q;function Z(t){if(t=t||{},"uniqueLinkId"in t&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),t.multigraph=t.uniqueLinkId),t.multigraph===void 0&&(t.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var a=new Map,i=new Map,o={},d=0,F=t.multigraph?z:T,p=[],w=m,L=m,v=m,h=m,g={version:20,addNode:x,addLink:P,removeLink:j,removeNode:C,getNode:c,getNodeCount:y,getLinkCount:E,getEdgeCount:E,getLinksCount:E,getNodesCount:y,getLinks:_,forEachNode:q,forEachLinkedNode:V,forEachLink:G,beginUpdate:v,endUpdate:h,clear:D,hasLink:k,hasNode:c,getLink:k};return X(g),b(),g;function b(){var e=g.on;g.on=n;function n(){return g.beginUpdate=v=B,g.endUpdate=h=H,w=O,L=R,g.on=e,e.apply(g,arguments)}}function O(e,n){p.push({link:e,changeType:n})}function R(e,n){p.push({node:e,changeType:n})}function x(e,n){if(e===void 0)throw new Error("Invalid node identifier");v();var r=c(e);return r?(r.data=n,L(r,"update")):(r=new $(e,n),L(r,"add")),a.set(e,r),h(),r}function c(e){return a.get(e)}function C(e){var n=c(e);if(!n)return!1;v();var r=n.links;return r&&(r.forEach(M),n.links=null),a.delete(e),L(n,"remove"),h(),!0}function P(e,n,r){v();var u=c(e)||x(e),s=c(n)||x(n),f=F(e,n,r),l=i.has(f.id);return i.set(f.id,f),U(u,f),e!==n&&U(s,f),w(f,l?"update":"add"),h(),f}function T(e,n,r){var u=N(e,n),s=i.get(u);return s?(s.data=r,s):new S(e,n,r,u)}function z(e,n,r){var u=N(e,n),s=o.hasOwnProperty(u);if(s||k(e,n)){s||(o[u]=0);var f="@"+ ++o[u];u=N(e+f,n+f)}return new S(e,n,r,u)}function y(){return a.size}function E(){return i.size}function _(e){var n=c(e);return n?n.links:null}function j(e,n){return n!==void 0&&(e=k(e,n)),M(e)}function M(e){if(!e||!i.get(e.id))return!1;v(),i.delete(e.id);var n=c(e.fromId),r=c(e.toId);return n&&n.links.delete(e),r&&r.links.delete(e),w(e,"remove"),h(),!0}function k(e,n){if(!(e===void 0||n===void 0))return i.get(N(e,n))}function D(){v(),q(function(e){C(e.id)}),h()}function G(e){if(typeof e=="function")for(var n=i.values(),r=n.next();!r.done;){if(e(r.value))return!0;r=n.next()}}function V(e,n,r){var u=c(e);if(u&&u.links&&typeof n=="function")return r?A(u.links,e,n):Y(u.links,e,n)}function Y(e,n,r){for(var u,s=e.values(),f=s.next();!f.done;){var l=f.value,J=l.fromId===n?l.toId:l.fromId;if(u=r(a.get(J),l),u)return!0;f=s.next()}}function A(e,n,r){for(var u,s=e.values(),f=s.next();!f.done;){var l=f.value;if(l.fromId===n&&(u=r(a.get(l.toId),l),u))return!0;f=s.next()}}function m(){}function B(){d+=1}function H(){d-=1,d===0&&p.length>0&&(g.fire("changed",p),p.length=0)}function q(e){if(typeof e!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+e);for(var n=a.values(),r=n.next();!r.done;){if(e(r.value))return!0;r=n.next()}}}function $(t,a){this.id=t,this.links=null,this.data=a}function U(t,a){t.links?t.links.add(a):t.links=new Set([a])}function S(t,a,i,o){this.fromId=t,this.toId=a,this.data=i,this.id=o}function N(t,a){return t.toString()+"ðŸ‘‰ "+a.toString()}const re=K(W);export{ee as a,re as g,ne as m};
