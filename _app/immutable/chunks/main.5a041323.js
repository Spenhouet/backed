import{S as u,i as c,s as _,C as m,k as h,l as g,m as b,h as f,n as r,b as p,D as v,E as w,F as y,g as M,d as z}from"./index.e8ba378b.js";import{t as d}from"./tw-merge.1aba061a.js";var T=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function C(n){let l,o,a;const i=n[2].default,s=m(i,n,n[1],null);return{c(){l=h("div"),s&&s.c(),this.h()},l(e){l=g(e,"DIV",{class:!0});var t=b(l);s&&s.l(t),t.forEach(f),this.h()},h(){r(l,"class",o=d(`flex flex-col bg-gray-50 shadow sm:rounded-lg overflow-hidden ${n[0]}`))},m(e,t){p(e,l,t),s&&s.m(l,null),a=!0},p(e,[t]){s&&s.p&&(!a||t&2)&&v(s,i,e,e[1],a?y(i,e[1],t,null):w(e[1]),null),(!a||t&1&&o!==(o=d(`flex flex-col bg-gray-50 shadow sm:rounded-lg overflow-hidden ${e[0]}`)))&&r(l,"class",o)},i(e){a||(M(s,e),a=!0)},o(e){z(s,e),a=!1},d(e){e&&f(l),s&&s.d(e)}}}function D(n,l,o){let{$$slots:a={},$$scope:i}=l,{class:s=""}=l;return n.$$set=e=>{"class"in e&&o(0,s=e.class),"$$scope"in e&&o(1,i=e.$$scope)},[s,i,a]}class $ extends u{constructor(l){super(),c(this,l,D,C,_,{class:0})}}export{$ as M,T as c};
